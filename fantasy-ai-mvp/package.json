{
  "name": "fantasy-ai-mvp",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "next dev",
    "build": "prisma generate && node scripts/prepare-vercel-db.js && next build",
    "postinstall": "prisma generate",
    "start": "next start",
    "lint": "next lint",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:ci": "jest --ci --coverage --watchAll=false",
    "mcp:yahoo": "tsx src/mcp/servers/yahoo-fantasy.ts",
    "mcp:espn": "tsx src/mcp/servers/espn-fantasy.ts",
    "mcp:gambling": "tsx src/mcp/servers/gambling-wagering.ts",
    "mcp:multi": "tsx src/mcp/servers/multi-platform-fantasy.ts",
    "mcp:ai": "tsx src/mcp/tools/ai-analytics.ts",
    "mcp:nhl": "tsx src/mcp/servers/nhl-fantasy.ts",
    "mcp:soccer": "tsx src/mcp/servers/soccer-fantasy.ts",
    "mcp:all": "concurrently \"npm run mcp:yahoo\" \"npm run mcp:espn\" \"npm run mcp:multi\" \"npm run mcp:ai\" \"npm run mcp:nhl\" \"npm run mcp:soccer\"",
    "collect:master": "tsx scripts/master-data-collector.ts",
    "collect:all-sports": "npm run collect:master",
    "deploy:production": "tsx scripts/deploy-production.ts",
    "deploy:demo": "tsx scripts/deploy-production-demo.ts",
    "deploy:supabase": "node scripts/execute-supabase-deployment.js",
    "deploy:supabase-full": "tsx scripts/deploy-supabase-production.ts",
    "setup:supabase": "node scripts/setup-supabase-env.js",
    "validate:supabase": "node scripts/validate-supabase-ready.js",
    "status:real": "tsx scripts/real-production-status.ts",
    "test:real-data": "tsx scripts/test-real-data-collection.ts",
    "test:global-mcp": "tsx scripts/test-global-mcp-army.ts",
    "db:generate": "prisma generate",
    "db:push": "prisma db push",
    "db:migrate": "prisma migrate dev",
    "db:seed": "tsx prisma/seed.ts",
    "db:reset": "prisma db push --force-reset && npm run db:seed",
    "sync:sports": "tsx scripts/sync-sports-data.ts",
    "sync:all": "npm run db:push && npm run sync:sports",
    "verify:sports": "tsx scripts/verify-sports-data.ts",
    "integrate:dashboard": "tsx scripts/integrate-dashboard-data.ts",
    "data:complete": "npm run sync:all && npm run verify:sports && npm run integrate:dashboard",
    "test:comprehensive": "tsx scripts/comprehensive-testing-script.ts",
    "fix:all": "tsx scripts/bulletproof-integration-fixer.ts",
    "fix:bulletproof": "tsx scripts/bulletproof-integration-fixer.ts",
    "validate:issues": "tsx scripts/validate-current-issues.ts",
    "real-data": "tsx scripts/continuous-REAL-data-collector.ts",
    "real-data:espn": "tsx scripts/real-espn-collector.ts",
    "real-data:all": "tsx scripts/ULTIMATE-REAL-DATA-COLLECTOR.ts",
    "real-data:stats": "tsx scripts/real-stats-scraper.ts",
    "real-data:scrape": "tsx scripts/mcp-web-scraper-army.ts",
    "real-data:engine": "tsx scripts/FANTASY-AI-REAL-DATA-ENGINE.ts",
    "real-data:engine:continuous": "tsx scripts/FANTASY-AI-REAL-DATA-ENGINE.ts --continuous",
    "mcp:firecrawl": "tsx scripts/firecrawl-mcp-integration.ts",
    "mcp:puppeteer": "tsx scripts/puppeteer-mcp-integration.ts",
    "mcp:knowledge-graph": "tsx scripts/knowledge-graph-mcp-integration.ts",
    "mcp:sequential": "tsx scripts/sequential-thinking-mcp-integration.ts",
    "mcp:all-scrapers": "concurrently \"npm run mcp:firecrawl\" \"npm run mcp:puppeteer\" \"npm run mcp:knowledge-graph\" \"npm run mcp:sequential\"",
    "powerhouse": "tsx scripts/ULTIMATE-FANTASY-AI-DATA-POWERHOUSE.ts",
    "powerhouse:continuous": "tsx scripts/ULTIMATE-FANTASY-AI-DATA-POWERHOUSE.ts --continuous",
    "hyperdrive": "tsx scripts/HYPERDRIVE-DATA-COLLECTOR.ts",
    "cache:demo": "tsx scripts/ultra-cache-system.ts",
    "websocket:server": "tsx scripts/realtime-websocket-system.ts",
    "maximum:all": "concurrently \"npm run powerhouse:continuous\" \"npm run hyperdrive\" \"npm run websocket:server\"",
    "demo:maximum": "tsx scripts/MAXIMUM-CAPABILITY-DEMO.ts",
    "setup:apis": "tsx scripts/setup-free-apis.ts",
    "voice:demo": "tsx scripts/elevenlabs-voice-integration.ts",
    "websocket": "tsx src/scripts/start-websocket-server.ts",
    "dev:all": "concurrently \"npm run dev\" \"npm run websocket\"",
    "ml:train:all": "tsx src/lib/ml/training/train-models.ts --all",
    "ml:train:player": "tsx src/lib/ml/training/train-models.ts --model player",
    "ml:train:matchup": "tsx src/lib/ml/training/train-models.ts --model matchup",
    "ml:train:injury": "tsx src/lib/ml/training/train-models.ts --model injury",
    "ml:train:trade": "tsx src/lib/ml/training/train-models.ts --model trade",
    "ml:train:lineup": "tsx src/lib/ml/training/train-models.ts --model lineup",
    "ml:train:weather": "tsx src/lib/ml/training/train-models.ts --model weather",
    "ml:train:pattern": "tsx src/lib/ml/training/train-models.ts --model pattern",
    "mobile": "tsx scripts/launch-mobile-app.ts",
    "mobile:ios": "cd src/mobile && npm run ios",
    "mobile:android": "cd src/mobile && npm run android",
    "mobile:start": "cd src/mobile && npm start",
    "launch:all": "tsx scripts/LAUNCH-ALL-SYSTEMS.ts",
    "launch:dev": "tsx scripts/start-development-suite.ts",
    "launch:demo": "tsx scripts/run-full-demo.ts",
    "health:check": "tsx scripts/check-all-systems.ts",
    "setup:complete": "npm run db:push && npm run ml:train:all && npm run launch:dev"
  },
  "dependencies": {
    "@auth/prisma-adapter": "^2.9.1",
    "@dnd-kit/core": "^6.3.1",
    "@dnd-kit/sortable": "^10.0.0",
    "@modelcontextprotocol/sdk": "^1.12.3",
    "@prisma/client": "^6.10.1",
    "@radix-ui/react-progress": "^1.1.7",
    "@radix-ui/react-switch": "^1.2.5",
    "@radix-ui/react-tabs": "^1.1.1",
    "@radix-ui/themes": "^3.2.1",
    "@supabase/supabase-js": "^2.50.0",
    "@tailwindcss/postcss": "^4.1.10",
    "@tanstack/react-query": "^5.80.7",
    "@tanstack/react-query-devtools": "^5.80.7",
    "@tensorflow/tfjs": "^4.17.0",
    "@tensorflow/tfjs-node": "^4.17.0",
    "@trpc/client": "^11.4.1",
    "@trpc/next": "^11.4.1",
    "@trpc/react-query": "^11.4.1",
    "@trpc/server": "^11.4.1",
    "bcryptjs": "^3.0.2",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "concurrently": "^8.2.2",
    "dotenv": "^16.5.0",
    "framer-motion": "^12.18.1",
    "jsonwebtoken": "^9.0.2",
    "lucide-react": "^0.515.0",
    "next": "15.3.3",
    "next-auth": "^4.24.11",
    "next-themes": "^0.4.6",
    "node-fetch": "^2.7.0",
    "openai": "^4.104.0",
    "pg": "^8.16.2",
    "prisma": "^6.10.1",
    "react": "^19.0.0",
    "react-dom": "^19.0.0",
    "react-hot-toast": "^2.5.2",
    "recharts": "^2.12.0",
    "socket.io": "^4.8.1",
    "socket.io-client": "^4.8.1",
    "speakeasy": "^2.0.0",
    "sqlite3": "^5.1.7",
    "stripe": "^14.25.0",
    "superjson": "^2.2.2",
    "tsx": "^4.20.3",
    "zod": "^3.25.64"
  },
  "devDependencies": {
    "@react-three/drei": "^10.3.0",
    "@react-three/fiber": "^9.1.2",
    "@testing-library/jest-dom": "^6.6.3",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^14.6.1",
    "@types/bcryptjs": "^3.0.0",
    "@types/jest": "^30.0.0",
    "@types/jsonwebtoken": "^9.0.10",
    "@types/node": "^20.19.1",
    "@types/react": "^19",
    "@types/react-dom": "^19",
    "@types/speakeasy": "^2.0.10",
    "@types/three": "^0.177.0",
    "autoprefixer": "^10.4.21",
    "jest": "^30.0.0",
    "jest-environment-jsdom": "^30.0.0",
    "lightningcss": "^1.30.1",
    "postcss": "^8.5.6",
    "tailwindcss": "^3.4.17",
    "three": "^0.177.0",
    "ts-jest": "^29.4.0",
    "typescript": "^5"
  }
}
